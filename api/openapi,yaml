openapi: Alpha 1.0
info:
  title: Open API Kundenbeziehung - Swiss National Standard
  description: |
    Schweizer Standard für den branchenübergreifenden Austausch von Kundendaten zur Etablierung einer selbstbestimmten digitalen Kundenbeziehung.
    
    Diese API implementiert das Basiskit der Open API Kundenbeziehung und ermöglicht standardisierten Datenaustausch zwischen Finanzdienstleistern, Versicherungen, Immobilienunternehmen und anderen Branchen.
    
    **Implementierte Module:**
    - Basisdaten (Identität, Kontakt, Adresse)
    - Identifikation (E-ID kompatibel)
    - Consent Management
    - Background Checks
    - Signatur-Services
    - Metadaten-Management
    
    **Sicherheitsstandards:**
    - FAPI 1.0 Advanced Compliance
    - OAuth 2.0 / OpenID Connect
    - mTLS für kritische Services
    - JWT-basierte Autorisierung
    
    **Regulatorische Compliance:**
    - DSGVO/nDSG konform
    - Banking Regulations (FINMA)
    - E-ID Framework Integration
  version: "1.0.0"
  contact:
    name: Open Banking Project
    url: https://openbankingproject.ch
    email: info@openbankingproject.ch
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: https://api.openbanking.ch/v1
    description: Production Server
  - url: https://sandbox-api.openbanking.ch/v1
    description: Sandbox Environment

security:
  - BearerAuth: []
  - mTLS: []

paths:
  # CONSENT MANAGEMENT
  /consent:
    post:
      summary: Erstelle Consent-Request
      description: Initiiert einen Consent-Flow für Datenaustausch zwischen Institutionen
      operationId: createConsent
      tags:
        - Consent Management
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConsentRequest'
            examples:
              account_opening:
                summary: Kontoeröffnung
                value:
                  customerId: "sha256:a1b2c3d4e5f6..."
                  requestingInstitution: "CH-BANK-001"
                  providingInstitution: "CH-BANK-002"
                  dataCategories: ["basicData", "identification", "kycData"]
                  purpose: "accountOpening"
                  expiryDate: "2024-12-31T23:59:59Z"
                  customerContactMethod: "email"
      responses:
        '201':
          description: Consent erfolgreich erstellt
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsentResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'

  /consent/{consentId}:
    get:
      summary: Consent-Status abrufen
      description: Ruft den aktuellen Status eines Consent-Requests ab
      operationId: getConsentStatus
      tags:
        - Consent Management
      parameters:
        - name: consentId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          example: "123e4567-e89b-12d3-a456-426614174000"
      responses:
        '200':
          description: Consent-Status erfolgreich abgerufen
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsentStatus'
        '404':
          $ref: '#/components/responses/NotFound'

    delete:
      summary: Consent widerrufen
      description: Widerruft einen bestehenden Consent
      operationId: revokeConsent
      tags:
        - Consent Management
      parameters:
        - name: consentId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Consent erfolgreich widerrufen
        '404':
          $ref: '#/components/responses/NotFound'

  # CUSTOMER DATA EXCHANGE
  /customer/check:
    post:
      summary: Kunden-Existenz prüfen
      description: Prüft ob ein Kunde bereits bei einer Institution identifiziert wurde (MVP Identifikation)
      operationId: checkCustomer
      tags:
        - Customer Data
      security:
        - mTLS: []
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerCheckRequest'
            examples:
              basic_check:
                summary: Basis-Kundenprüfung
                value:
                  sharedCustomerHash: "sha256:abc123def456..."
                  basicData:
                    lastName: "Müller"
                    givenName: "Hans"
                    birthDate: "1985-03-15"
                    nationality: ["CH"]
      responses:
        '200':
          description: Kunde erfolgreich geprüft
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerCheckResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /customer/fullRequest:
    post:
      summary: Vollständige Kundendaten anfordern
      description: Fordert das vollständige Kundendatenset an (erfordert gültigen Consent)
      operationId: requestFullCustomerData
      tags:
        - Customer Data
      security:
        - mTLS: []
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FullDataRequest'
      responses:
        '200':
          description: Kundendaten erfolgreich übertragen
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FullCustomerDataset'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'

  # IDENTIFICATION SERVICES
  /identification/verify:
    post:
      summary: Identifikation verifizieren
      description: Verifiziert Identifikationsdaten gegen E-ID oder andere Quellen
      operationId: verifyIdentification
      tags:
        - Identification
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentificationRequest'
      responses:
        '200':
          description: Identifikation erfolgreich verifiziert
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentificationResponse'
        '400':
          $ref: '#/components/responses/BadRequest'

  # BACKGROUND CHECKS
  /checks/comprehensive:
    post:
      summary: Umfassende Background Checks
      description: Führt KYC, AML, PEP und andere regulatorische Checks durch
      operationId: performComprehensiveChecks
      tags:
        - Background Checks
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComprehensiveCheckRequest'
      responses:
        '200':
          description: Checks erfolgreich durchgeführt
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComprehensiveCheckResponse'
        '400':
          $ref: '#/components/responses/BadRequest'

  # SIGNATURE SERVICES
  /signature/initiate:
    post:
      summary: Signatur-Prozess initiieren
      description: Startet einen QES- oder eSignatur-Prozess
      operationId: initiateSignature
      tags:
        - Signature Services
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignatureRequest'
      responses:
        '201':
          description: Signatur-Prozess erfolgreich initiiert
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignatureResponse'

  /signature/{signatureId}/status:
    get:
      summary: Signatur-Status abrufen
      description: Ruft den Status eines Signatur-Prozesses ab
      operationId: getSignatureStatus
      tags:
        - Signature Services
      parameters:
        - name: signatureId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Signatur-Status erfolgreich abgerufen
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignatureStatus'

  # REGISTRY SERVICES
  /registry/participants:
    get:
      summary: Teilnehmer im Netzwerk auflisten
      description: Listet alle aktiven Teilnehmer im föderierten System auf
      operationId: listParticipants
      tags:
        - Registry
      responses:
        '200':
          description: Teilnehmer erfolgreich abgerufen
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParticipantList'

  # HEALTH CHECK
  /health:
    get:
      summary: API Health Check
      description: Überprüft die Verfügbarkeit der API
      operationId: healthCheck
      tags:
        - Health
      security: []
      responses:
        '200':
          description: API ist verfügbar
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthStatus'

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT-Token mit Consent-Claims für API-Zugriff
    mTLS:
      type: mutualTLS
      description: Mutual TLS für höchste Sicherheitsanforderungen

  responses:
    BadRequest:
      description: Ungültige Anfrage
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            error: "INVALID_REQUEST"
            message: "Missing required field: customerId"
            timestamp: "2024-01-15T10:30:00Z"

    Unauthorized:
      description: Nicht autorisiert
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            error: "UNAUTHORIZED"
            message: "Invalid or missing authentication token"
            timestamp: "2024-01-15T10:30:00Z"

    Forbidden:
      description: Zugriff verweigert
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            error: "FORBIDDEN"
            message: "Insufficient permissions for requested operation"
            timestamp: "2024-01-15T10:30:00Z"

    NotFound:
      description: Ressource nicht gefunden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            error: "NOT_FOUND"
            message: "Consent with ID not found"
            timestamp: "2024-01-15T10:30:00Z"

    InternalServerError:
      description: Interner Serverfehler
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          example:
            error: "INTERNAL_ERROR"
            message: "An unexpected error occurred"
            timestamp: "2024-01-15T10:30:00Z"

  schemas:
    ErrorResponse:
      type: object
      required:
        - error
        - message
        - timestamp
      properties:
        error:
          type: string
          description: Fehlercode
        message:
          type: string
          description: Fehlerbeschreibung
        timestamp:
          type: string
          format: date-time
          description: Zeitstempel des Fehlers
        details:
          type: object
          description: Zusätzliche Fehlerdetails

    HealthStatus:
      type: object
      properties:
        status:
          type: string
          enum: [healthy, unhealthy]
        timestamp:
          type: string
          format: date-time
        version:
          type: string
        services:
          type: object
          properties:
            database:
              type: string
              enum: [up, down]
            external_apis:
              type: string
              enum: [up, down]

    # CONSENT SCHEMAS
    ConsentRequest:
      type: object
      required:
        - customerId
        - requestingInstitution
        - dataCategories
        - purpose
        - expiryDate
      properties:
        customerId:
          type: string
          description: Eindeutige Kunden-ID (sharedCustomerHash)
          example: "sha256:abc123..."
        requestingInstitution:
          type: string
          description: Institution die Daten anfordert
          example: "CH-BANK-001"
        providingInstitution:
          type: string
          description: Institution die Daten bereitstellt
          example: "CH-BANK-002"
        dataCategories:
          type: array
          items:
            $ref: '#/components/schemas/DataCategory'
          description: Angeforderte Datenkategorien
        purpose:
          type: string
          enum: [accountOpening, creditAssessment, compliance, customerUpdate]
          description: Zweck der Datenverwendung
        expiryDate:
          type: string
          format: date-time
          description: Ablaufzeitpunkt des Consents
        customerContactMethod:
          type: string
          enum: [email, sms, app, postal]
          description: Bevorzugter Kontaktweg für Consent-Bestätigung

    ConsentResponse:
      type: object
      properties:
        consentId:
          type: string
          format: uuid
          description: Eindeutige Consent-ID
        status:
          type: string
          enum: [pending, approved, rejected, expired]
        consentUrl:
          type: string
          format: uri
          description: URL für Kunden-Consent-Interface
        qrCode:
          type: string
          description: Base64-kodierter QR-Code für mobilen Consent
        expiryDate:
          type: string
          format: date-time

    ConsentStatus:
      type: object
      properties:
        consentId:
          type: string
          format: uuid
        status:
          type: string
          enum: [pending, approved, rejected, expired, revoked]
        approvedAt:
          type: string
          format: date-time
        revokedAt:
          type: string
          format: date-time
        dataCategories:
          type: array
          items:
            $ref: '#/components/schemas/DataCategory'

    DataCategory:
      type: string
      enum: 
        - basicData
        - identification
        - contactInformation
        - addressData
        - kycData
        - riskProfile
        - complianceData
        - extendedData

    # CUSTOMER DATA SCHEMAS
    CustomerCheckRequest:
      type: object
      required:
        - sharedCustomerHash
        - basicData
      properties:
        sharedCustomerHash:
          type: string
          description: SHA-256 Hash der Grunddaten für Matching
          example: "sha256:a1b2c3d4..."
        basicData:
          $ref: '#/components/schemas/BasicCustomerData'

    CustomerCheckResponse:
      type: object
      properties:
        match:
          type: boolean
          description: Ob ein Kunde gefunden wurde
        identificationDate:
          type: string
          format: date-time
          description: Datum der letzten Identifikation
        levelOfAssurance:
          type: string
          enum: [low, substantial, high]
          description: Sicherheitsniveau der Identifikation
        validUntil:
          type: string
          format: date-time
          description: Gültigkeit der Identifikation

    FullDataRequest:
      type: object
      required:
        - sharedCustomerHash
        - purpose
        - consentToken
      properties:
        sharedCustomerHash:
          type: string
          description: SHA-256 Hash des Kunden
        purpose:
          type: string
          enum: [accountOpening, creditAssessment, compliance]
        consentToken:
          type: string
          description: JWT-Token mit Consent-Nachweis

    FullCustomerDataset:
      type: object
      properties:
        basicData:
          $ref: '#/components/schemas/BasicCustomerData'
        contactInformation:
          $ref: '#/components/schemas/ContactInformation'
        addressData:
          $ref: '#/components/schemas/AddressData'
        identification:
          $ref: '#/components/schemas/IdentificationData'
        kycData:
          $ref: '#/components/schemas/KYCData'
        complianceData:
          $ref: '#/components/schemas/ComplianceData'
        riskProfile:
          $ref: '#/components/schemas/RiskProfile'
        metadata:
          $ref: '#/components/schemas/DataMetadata'

    BasicCustomerData:
      type: object
      required:
        - lastName
        - givenName
        - birthDate
        - nationality
      properties:
        lastName:
          type: string
          description: Nachname
          example: "Müller"
          maxLength: 100
        givenName:
          type: string
          description: Vorname(n)
          example: "Hans Peter"
          maxLength: 100
        middleName:
          type: string
          description: Weitere Vornamen
          maxLength: 100
        title:
          type: string
          description: Titel
          example: "Dr."
          maxLength: 50
        birthDate:
          type: string
          format: date
          description: Geburtsdatum
          example: "1985-03-15"
        birthPlace:
          type: string
          description: Geburtsort
          example: "Zürich"
          maxLength: 100
        nationality:
          type: array
          items:
            type: string
            pattern: '^[A-Z]{2}$'
          description: Nationalität(en) (ISO 3166-1)
          example: ["CH", "DE"]
          minItems: 1
          maxItems: 5
        gender:
          type: string
          enum: [male, female, other, unknown]
        maritalStatus:
          type: string
          enum: [single, married, divorced, widowed, registered_partnership]
        language:
          type: string
          description: Bevorzugte Sprache (ISO 639-1)
          example: "de"
          pattern: '^[a-z]{2}$'

    ContactInformation:
      type: object
      properties:
        primaryEmail:
          type: string
          format: email
          description: Primäre E-Mail-Adresse
          maxLength: 255
        secondaryEmail:
          type: string
          format: email
          description: Sekundäre E-Mail-Adresse
          maxLength: 255
        mobilePhone:
          type: string
          description: Mobiltelefonnummer (E.164 Format)
          example: "+41791234567"
          pattern: '^\+[1-9]\d{1,14}$'
        landlinePhone:
          type: string
          description: Festnetznummer
          pattern: '^\+[1-9]\d{1,14}$'
        preferredContactMethod:
          type: string
          enum: [email, sms, phone, postal, app]
        communicationLanguage:
          type: string
          description: Kommunikationssprache
          pattern: '^[a-z]{2}$'
        availabilityHours:
          type: string
          description: Verfügbarkeitszeiten
          example: "09:00-17:00"

    AddressData:
      type: object
      properties:
        residentialAddress:
          $ref: '#/components/schemas/Address'
        mailingAddress:
          $ref: '#/components/schemas/Address'
        businessAddress:
          $ref: '#/components/schemas/Address'
        previousAddresses:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/Address'
              - type: object
                properties:
                  validFrom:
                    type: string
                    format: date
                  validTo:
                    type: string
                    format: date

    Address:
      type: object
      required:
        - street
        - postalCode
        - city
        - country
      properties:
        street:
          type: string
          description: Straße und Hausnummer
          example: "Bahnhofstrasse 1"
          maxLength: 255
        addressLine2:
          type: string
          description: Adresszusatz
          maxLength: 255
        postalCode:
          type: string
          description: Postleitzahl
          example: "8001"
          maxLength: 20
        city:
          type: string
          description: Ort
          example: "Zürich"
          maxLength: 100
        region:
          type: string
          description: Kanton/Region
          example: "ZH"
          maxLength: 100
        country:
          type: string
          description: Land (ISO 3166-1)
          example: "CH"
          pattern: '^[A-Z]{2}$'
        addressType:
          type: string
          enum: [residential, mailing, business, temporary]

    IdentificationData:
      type: object
      properties:
        identificationMethod:
          type: string
          enum: [video_identification, online_identification, personal_appearance, eid]
          description: Identifikationsmethode
        documentType:
          type: string
          enum: [passport, id_card, driving_license, eid]
          description: Dokumententyp
        documentNumber:
          type: string
          description: Dokumentennummer
          maxLength: 50
        issuingAuthority:
          type: string
          description: Ausstellende Behörde
          maxLength: 255
        issueDate:
          type: string
          format: date
          description: Ausstellungsdatum
        expiryDate:
          type: string
          format: date
          description: Ablaufdatum
        issuingCountry:
          type: string
          description: Ausstellungsland (ISO 3166-1)
          pattern: '^[A-Z]{2}$'
        levelOfAssurance:
          type: string
          enum: [low, substantial, high]
          description: Sicherheitsniveau (eIDAS-konform)
        verificationDate:
          type: string
          format: date-time
          description: Verifikationsdatum
        verificationMethod:
          type: string
          description: Verifikationsmethode
          maxLength: 100
        documentImageUrl:
          type: string
          format: uri
          description: Signierter Link zum Dokumentenscan (10min gültig)
        biometricData:
          type: object
          description: Biometrische Daten (wenn verfügbar)
          properties:
            faceImage:
              type: string
              description: Gesichtsbild (Base64)
            livenessScore:
              type: number
              minimum: 0
              maximum: 1
              description: Liveness-Check Score (0-1)
        nfcData:
          type: object
          description: NFC-Daten von eID
          properties:
            available:
              type: boolean
            verified:
              type: boolean

    KYCData:
      type: object
      properties:
        occupation:
          type: string
          description: Beruf
          maxLength: 255
        employer:
          type: string
          description: Arbeitgeber
          maxLength: 255
        employmentType:
          type: string
          enum: [employed, self_employed, unemployed, retired, student]
        annualIncome:
          $ref: '#/components/schemas/MonetaryAmount'
        totalAssets:
          $ref: '#/components/schemas/MonetaryAmount'
        sourceOfFunds:
          type: string
          enum: [salary, business_income, inheritance, investment_returns, other]
        sourceOfFundsDescription:
          type: string
          description: Beschreibung der Mittelherkunft
          maxLength: 1000
        pepStatus:
          type: boolean
          description: Politisch exponierte Person
        pepDetails:
          type: string
          description: Details zur PEP-Stellung
          maxLength: 1000
        beneficialOwners:
          type: array
          items:
            $ref: '#/components/schemas/BeneficialOwner'
        businessPurpose:
          type: string
          description: Geschäftszweck (bei Firmenkunden)
          maxLength: 1000

    ComplianceData:
      type: object
      properties:
        fatcaStatus:
          type: string
          enum: [us_person, non_us_person, uncertain]
        fatcaClassification:
          type: string
          description: FATCA-Klassifikation
          maxLength: 100
        crsReportable:
          type: boolean
          description: CRS-Meldepflicht
        taxResidencies:
          type: array
          items:
            $ref: '#/components/schemas/TaxResidency'
        tinNumbers:
          type: array
          items:
            $ref: '#/components/schemas/TINNumber'
        sanctionsScreening:
          $ref: '#/components/schemas/ScreeningResult'
        amlRiskRating:
          type: string
          enum: [low, medium, high]
        lastDueDiligence:
          type: string
          format: date-time
        nextReviewDate:
          type: string
          format: date

    RiskProfile:
      type: object
      properties:
        investmentExperience:
          type: string
          enum: [none, limited, good, extensive]
        investmentKnowledge:
          type: string
          enum: [basic, intermediate, advanced, professional]
        riskTolerance:
          type: string
          enum: [conservative, moderate, aggressive]
        investmentHorizon:
          type: string
          enum: [short, medium, long]
        investmentObjectives:
          type: array
          items:
            type: string
            enum: [capital_preservation, income, growth, speculation]
        esgPreferences:
          type: object
          properties:
            considerEsgFactors:
              type: boolean
            esgImportance:
              type: string
              enum: [not_important, somewhat_important, very_important]
            exclusions:
              type: array
              items:
                type: string

    BeneficialOwner:
      type: object
      required:
        - name
        - percentage
      properties:
        name:
          type: string
          maxLength: 255
        percentage:
          type: number
          minimum: 0
          maximum: 100
          description: Anteil in Prozent
        pepStatus:
          type: boolean

    TaxResidency:
      type: object
      required:
        - country
      properties:
        country:
          type: string
          description: Land (ISO 3166-1)
          pattern: '^[A-Z]{2}$'
        isPrimary:
          type: boolean
        tinNumber:
          type: string
          maxLength: 50

    TINNumber:
      type: object
      required:
        - number
        - country
      properties:
        number:
          type: string
          maxLength: 50
        country:
          type: string
          pattern: '^[A-Z]{2}$'
        type:
          type: string
          maxLength: 50

    ScreeningResult:
      type: object
      properties:
        sanctionsList:
          type: string
          enum: [clear, match, potential_match]
        pepCheck:
          type: string
          enum: [clear, match, potential_match]
        adverseMedia:
          type: string
          enum: [clear, match, potential_match]
        lastScreeningDate:
          type: string
          format: date-time
        nextScreeningDate:
          type: string
          format: date

    MonetaryAmount:
      type: object
      required:
        - amount
        - currency
      properties:
        amount:
          type: number
          minimum: 0
          description: Betrag
        currency:
          type: string
          description: Währung (ISO 4217)
          example: "CHF"
          pattern: '^[A-Z]{3}$'

    DataMetadata:
      type: object
      properties:
        originator:
          type: string
          description: Ursprungsystem/Institution
          maxLength: 255
        createdAt:
          type: string
          format: date-time
        lastUpdated:
          type: string
          format: date-time
        version:
          type: string
          description: Datenversion
          maxLength: 50
        dataClassification:
          type: string
          enum: [public, internal, confidential, restricted]
        retentionPolicy:
          type: string
          description: Aufbewahrungsrichtlinie
          maxLength: 255
        legalBasis:
          type: string
          description: Rechtsgrundlage der Verarbeitung
          maxLength: 255
        qualityScore:
          type: number
          minimum: 0
          maximum: 1
          description: Datenqualitätsbewertung (0-1)
        verificationStatus:
          type: string
          enum: [unverified, verified, outdated]

    # IDENTIFICATION SCHEMAS
    IdentificationRequest:
      type: object
      required:
        - customerId
        - identificationType
      properties:
        customerId:
          type: string
          maxLength: 255
        identificationType:
          type: string
          enum: [eid_verification, document_verification, biometric_verification]
        documentData:
          $ref: '#/components/schemas/DocumentData'
        biometricData:
          $ref: '#/components/schemas/BiometricData'

    IdentificationResponse:
      type: object
      properties:
        verificationId:
          type: string
          format: uuid
        status:
          type: string
          enum: [success, failed, pending]
        levelOfAssurance:
          type: string
          enum: [low, substantial, high]
        verificationMethod:
          type: string
          maxLength: 100
        timestamp:
          type: string
          format: date-time
        errors:
          type: array
          items:
            type: string

    DocumentData:
      type: object
      properties:
        documentType:
          type: string
          enum: [passport, id_card, driving_license, eid]
        documentImage:
          type: string
          description: Base64-kodiertes Dokumentenbild
        nfcData:
          type: string
          description: NFC-Daten von eID

    BiometricData:
      type: object
      properties:
        faceImage:
          type: string
          description: Base64-kodiertes Gesichtsbild
        livenessVideo:
          type: string
          description: Liveness-Check Video

    # CHECK SCHEMAS
    ComprehensiveCheckRequest:
      type: object
      required:
        - customerId
        - checkTypes
      properties:
        customerId:
          type: string
          maxLength: 255
        customerData:
          $ref: '#/components/schemas/BasicCustomerData'
        checkTypes:
          type: array
          items:
            type: string
            enum: [sanctions, pep, crime, adverse_media, credit, zek_iko]
          minItems: 1

    ComprehensiveCheckResponse:
      type: object
      properties:
        checkId:
          type: string
          format: uuid
        results:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/CheckResult'
        overallRisk:
          type: string
          enum: [low, medium, high]
        timestamp:
          type: string
          format: date-time

    CheckResult:
      type: object
      properties:
        status:
          type: string
          enum: [clear, alert, blocked]
        score:
          type: number
          minimum: 0
          maximum: 1
          description: Risk Score (0-1)
        details:
          type: string
          maxLength: 1000
        lastChecked:
          type: string
          format: date-time

    # SIGNATURE SCHEMAS
    SignatureRequest:
      type: object
      required:
        - customerId
        - documents
        - signatureType
      properties:
        customerId:
          type: string
          maxLength: 255
        documents:
          type: array
          items:
            $ref: '#/components/schemas/DocumentToSign'
          minItems: 1
        signatureType:
          type: string
          enum: [qes, aes, simple]
        notificationMethod:
          type: string
          enum: [email, sms, app]

    DocumentToSign:
      type: object
      required:
        - documentId
        - documentName
        - documentHash
      properties:
        documentId:
          type: string
          maxLength: 255
        documentName:
          type: string
          maxLength: 255
        documentHash:
          type: string
          description: SHA-256 Hash des Dokuments
        documentUrl:
          type: string
          format: uri

    SignatureResponse:
      type: object
      properties:
        signatureId:
          type: string
          format: uuid
        signatureUrl:
          type: string
          format: uri
          description: URL für Signatur-Interface
        qrCode:
          type: string
          description: QR-Code für mobile Signatur
        expiryDate:
          type: string
          format: date-time

    SignatureStatus:
      type: object
      properties:
        signatureId:
          type: string
          format: uuid
        status:
          type: string
          enum: [pending, signed, expired, failed]
        signedAt:
          type: string
          format: date-time
        signatureHash:
          type: string
          description: Hash der Signatur
        certificateInfo:
          type: object
          description: Zertifikatsinformationen
          properties:
            issuer:
              type: string
            subject:
              type: string
            validFrom:
              type: string
              format: date-time
            validTo:
              type: string
              format: date-time

    # REGISTRY SCHEMAS
    ParticipantList:
      type: object
      properties:
        participants:
          type: array
          items:
            $ref: '#/components/schemas/Participant'

    Participant:
      type: object
      properties:
        participantId:
          type: string
          description: Eindeutige Teilnehmer-ID
          maxLength: 100
        name:
          type: string
          description: Name der Institution
          maxLength: 255
        industry:
          type: string
          enum: [banking, insurance, real_estate, mobility, retail, government]
        endpoints:
          type: object
          description: API-Endpunkte
          properties:
            baseUrl:
              type: string
              format: uri
            healthCheck:
              type: string
              format: uri
        certificates:
          type: array
          items:
            type: string
          description: TLS-Zertifikate für mTLS
        status:
          type: string
          enum: [active, inactive, suspended]
        lastSeen:
          type: string
          format: date-time